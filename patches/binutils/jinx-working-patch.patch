diff --git binutils-clean/bfd/config.bfd binutils-workdir/bfd/config.bfd
index cfe5824..a4a609b 100644
--- binutils-clean/bfd/config.bfd
+++ binutils-workdir/bfd/config.bfd
@@ -696,6 +696,11 @@ case "${targ}" in
     targ_selvecs="i386_elf32_vec"
     want64=true
     ;;
+  x86_64-*-zigux*)
+    targ_defvec=x86_64_elf64_vec
+    targ_selvecs="i386_elf32_vec"
+    want64=true
+    ;;
   x86_64-*-netbsd* | x86_64-*-openbsd*)
     targ_defvec=x86_64_elf64_vec
     targ_selvecs="i386_elf32_vec iamcu_elf32_vec i386_coff_vec i386_pei_vec x86_64_pe_vec x86_64_pei_vec l1om_elf64_vec k1om_elf64_vec"
diff --git binutils-clean/bfd/elfxx-x86.c binutils-workdir/bfd/elfxx-x86.c
index d00dc45..4117b86 100644
--- binutils-clean/bfd/elfxx-x86.c
+++ binutils-workdir/bfd/elfxx-x86.c
@@ -25,9 +25,9 @@
 /* The name of the dynamic interpreter.  This is put in the .interp
    section.  */
 
-#define ELF32_DYNAMIC_INTERPRETER "/usr/lib/libc.so.1"
-#define ELF64_DYNAMIC_INTERPRETER "/lib/ld64.so.1"
-#define ELFX32_DYNAMIC_INTERPRETER "/lib/ldx32.so.1"
+#define ELF32_DYNAMIC_INTERPRETER "/usr/lib/ld_i386.so"
+#define ELF64_DYNAMIC_INTERPRETER "/usr/lib/ld.so"
+#define ELFX32_DYNAMIC_INTERPRETER "/usr/lib/ld32.so"
 
 bool
 _bfd_x86_elf_mkobject (bfd *abfd)
diff --git binutils-clean/gas/configure.tgt binutils-workdir/gas/configure.tgt
index 62f806b..775e810 100644
--- binutils-clean/gas/configure.tgt
+++ binutils-workdir/gas/configure.tgt
@@ -227,6 +227,7 @@ case ${generic_target} in
   i386-*-elf*)				fmt=elf ;;
   i386-*-fuchsia*)			fmt=elf ;;
   i386-*-haiku*)			fmt=elf em=haiku ;;
+  i386-*-zigux*)			fmt=elf ;;
   i386-*-genode*)			fmt=elf ;;
   i386-*-bsd*)				fmt=aout em=386bsd ;;
   i386-*-netbsd*-gnu* | \
diff --git binutils-clean/gold/x86_64.cc binutils-workdir/gold/x86_64.cc
index 86b232a..fd24e7f 100644
--- binutils-clean/gold/x86_64.cc
+++ binutils-workdir/gold/x86_64.cc
@@ -1411,7 +1411,7 @@ const Target::Target_info Target_x86_64<64>::x86_64_info =
   true,			// is_default_stack_executable
   true,			// can_icf_inline_merge_sections
   '\0',			// wrap_char
-  "/lib/ld64.so.1",     // program interpreter
+  "/usr/lib/ld.so",     // program interpreter
   0x400000,		// default_text_segment_address
   0x1000,		// abi_pagesize (overridable by -z max-page-size)
   0x1000,		// common_pagesize (overridable by -z common-page-size)
@@ -1440,7 +1440,7 @@ const Target::Target_info Target_x86_64<32>::x86_64_info =
   true,			// is_default_stack_executable
   true,			// can_icf_inline_merge_sections
   '\0',			// wrap_char
-  "/libx32/ldx32.so.1", // program interpreter
+  "/usr/lib/ld32.so", // program interpreter
   0x400000,		// default_text_segment_address
   0x1000,		// abi_pagesize (overridable by -z max-page-size)
   0x1000,		// common_pagesize (overridable by -z common-page-size)
diff --git binutils-clean/ld/configure.tgt binutils-workdir/ld/configure.tgt
index c7acf3f..a999acc 100644
--- binutils-clean/ld/configure.tgt
+++ binutils-workdir/ld/configure.tgt
@@ -956,6 +956,10 @@ x86_64-*-cloudabi*)	targ_emul=elf_x86_64_cloudabi
 x86_64-*-haiku*)	targ_emul=elf_x86_64_haiku
 			targ_extra_emuls="elf_x86_64 elf_i386_haiku"
 			;;
+x86_64-*-zigux*)
+			targ_emul=elf_x86_64
+			targ_extra_emuls=elf_i386
+			;;
 x86_64-*-linux-gnux32)	targ_emul=elf32_x86_64
 			targ_extra_emuls="elf_x86_64 elf_i386 elf_iamcu elf_l1om elf_k1om"
 			targ_extra_libpath="elf_i386 elf_iamcu elf_x86_64 elf_l1om elf_k1om"
diff --git binutils-clean/ld/emulparams/elf_x86_64.sh binutils-workdir/ld/emulparams/elf_x86_64.sh
index 5f2743e..f8f99bc 100644
--- binutils-clean/ld/emulparams/elf_x86_64.sh
+++ binutils-workdir/ld/emulparams/elf_x86_64.sh
@@ -43,7 +43,7 @@ fi
 # Linux/Solaris modify the default library search path to first include
 # a 64-bit specific directory.
 case "$target" in
-  x86_64*-linux*|i[3-7]86-*-linux-*)
+  x86_64*-linux*|i[3-7]86-*-linux-*|x86_64*-zigux*)
     case "$EMULATION_NAME" in
       *64*)
 	LIBPATH_SUFFIX=64
