diff --git a/sysdeps/zigux/include/zigux/syscall.h b/sysdeps/zigux/include/zigux/syscall.h
index 48d3914..1208278 100644
--- a/sysdeps/zigux/include/zigux/syscall.h
+++ b/sysdeps/zigux/include/zigux/syscall.h
@@ -6,12 +6,16 @@
 #define SYS_PROC_EXIT 0x0
 #define SYS_PROC_LOG 0x1
 #define SYS_PROC_ARCH_CTL 0x2
+#define SYS_PROC_GET_PID 0x3
+#define SYS_PROC_GET_PPID 0x4
 
 #define SYS_FILE_OPEN 0x100
 #define SYS_FILE_CLOSE 0x101
 #define SYS_FILE_READ 0x102
 #define SYS_FILE_WRITE 0x103
 #define SYS_FILE_SEEK 0x104
+#define SYS_FILE_GET_CWD 0x105
+#define SYS_FILE_STAT 0x106
 
 #define SYS_MEM_MAP 0x200
 #define SYS_MEM_UNMAP 0x201
diff --git a/sysdeps/zigux/src/sysdeps.cpp b/sysdeps/zigux/src/sysdeps.cpp
index f02b591..9f36f95 100644
--- a/sysdeps/zigux/src/sysdeps.cpp
+++ b/sysdeps/zigux/src/sysdeps.cpp
@@ -4,6 +4,7 @@
 #include <abi-bits/vm-flags.h>
 #include <bits/off_t.h>
 #include <bits/ssize_t.h>
+#include <mlibc/debug.hpp>
 #include <mlibc/fsfd_target.hpp>
 #include <mlibc/posix-sysdeps.hpp>
 #include <zigux/syscall.h>
@@ -123,6 +124,80 @@ int sys_vm_unmap(void *pointer, size_t size) {
     return 0;
 }
 
-int sys_clock_get(int clock, time_t *secs, long *nanos) STUB_IMPL(sys_clock_get)
+int sys_clock_get(int clock, time_t *secs, long *nanos) {
+    *secs = 0;
+    *nanos = 0;
+
+    return 0;
+}
+
+gid_t sys_getgid() {
+    mlibc::infoLogger() << "sys_getgid() is not implemented" << frg::endlog;
+    return 0;
+}
+
+gid_t sys_getegid() {
+    mlibc::infoLogger() << "sys_getegid() is not implemented" << frg::endlog;
+    return 0;
+}
+
+uid_t sys_getuid() {
+    mlibc::infoLogger() << "sys_getuid() is not implemented" << frg::endlog;
+    return 0;
+}
+
+uid_t sys_geteuid() {
+    mlibc::infoLogger() << "sys_geteuid() is not implemented" << frg::endlog;
+    return 0;
+}
+
+pid_t sys_getpid() {
+    return syscall_result<pid_t>(do_syscall(SYS_PROC_GET_PID));
+}
+
+pid_t sys_getppid() {
+    return syscall_result<pid_t>(do_syscall(SYS_PROC_GET_PPID));
+}
+
+pid_t sys_getpgid(pid_t pid, pid_t *pgid) {
+    mlibc::infoLogger() << "sys_getpgid() is not implemented" << frg::endlog;
+    *pgid = 0;
+    return 0;
+}
+
+int sys_setgid(gid_t gid) {
+    mlibc::infoLogger() << "sys_setgid() is not implemented" << frg::endlog;
+    return 0;
+}
+
+int sys_setegid(gid_t egid) {
+    mlibc::infoLogger() << "sys_setegid() is not implemented" << frg::endlog;
+    return 0;
+}
+
+int sys_setuid(uid_t uid) {
+    mlibc::infoLogger() << "sys_setuid() is not implemented" << frg::endlog;
+    return 0;
+}
+
+int sys_seteuid(uid_t euid) {
+    mlibc::infoLogger() << "sys_seteuid() is not implemented" << frg::endlog;
+    return 0;
+}
+
+int sys_getcwd(char *buffer, size_t size) {
+    auto result = do_syscall(SYS_FILE_GET_CWD, buffer, size);
+
+    if (auto err = syscall_error(result))
+        return err;
+
+    return 0;
+}
+
+int sys_stat(fsfd_target fsfdt, int fd, const char *path, int flags, struct stat *statbuf) {
+    mlibc::infoLogger() << "sys_stat() is not implemented" << frg::endlog;
+    memset(statbuf, 0, sizeof(*statbuf));
+    return 0;
+}
 
 }
