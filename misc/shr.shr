D var_addrs P P P P
D var_names P P P P
D tmp_label_buffer P
D bss_size I 0
D current_addr I x401000
D next_var_addr Q var_addrs
D next_var_name Q var_names

D cond_ret R

D clean_exit = 7 0
D exit = 0 x3C !

D elf_hdr
    B x7F B 'E  B 'L  B 'F
    B x02 B x01 B x01 B x00
    B x00 B x00 B x00 B x00
    B x00 B x00 B x00 B x00

D elf_type_10
    B x02 B x00

D elf_machine_12
    B x3E B x00

D elf_version_14
    B x01 B x00 B x00 B x00

D elf_entry_18
    I 0

D elf_phoff_20
    I x40

D elf_shoff_28
    I 0

D elf_flags_30
    B x00 B x00 B x00 B x00

D elf_ehsize_34
    B x00 B x00

D elf_phentsize_36
    B x38 B x00

D elf_phnum_38
    B x02 B x00

D elf_shentsize_3A
    B x40 B x00

D elf_shnum_3C
    B x00 B x00

D elf_shstrndx_3E
    B x00 B x00

D elf_bss_phdr_40
    B x01 B x00 B x00 B x00
    B x06 B x00 B x00 B x00

D elf_bss_offset_48
    I 0

D elf_bss_vaddr_50
    I x401000

D elf_bss_paddr_58
    I x401000

D elf_bss_filesz_60
    I 0

D elf_bss_memsz_68
    I x41414141

D elf_bss_alignment_70
    I x1000

D elf_text_phdr_78
    B x01 B x00 B x00 B x00
    B x07 B x00 B x00 B x00

D elf_text_offset_80
    I x1000

D elf_text_vaddr_88
    I 0

D elf_text_paddr_90
    I 0

D elf_text_filesz_98
    I 0

D elf_text_memsz_A0
    I 0

D elf_text_alignment_A8
    I x1000

D curraddr
    A 1 current_addr
    L 2 1
    R

D read
    = 2 1
    - 6 4 8
    = 7 0
    = 0 0
    S 0 6
    !
    L 0 6
    R

D write8
    = 2 1
    - 6 4 8
    = 7 3
    S 0 6
    = 0 1
    !
    M 0 1
    N exit
    C curraddr
    + 2 2 1
    S 2 1
    R

D write32
    = 2 4
    - 6 4 8
    = 7 3
    S 0 6
    = 0 1
    !
    M 0 4
    N exit
    C curraddr
    + 2 2 4
    S 2 1
    R

D write64
    = 2 8
    - 6 4 8
    = 7 3
    S 0 6
    = 0 1
    !
    M 0 8
    N exit
    C curraddr
    + 2 2 8
    S 2 1
    R

D writeerr8
    - 6 4 8
    = 7 2
    = 2 1
    S 0 6
    = 0 1
    !
    R

D seek_to_start
    = 6 0
D seek
    = 2 0
    = 0 8
    = 7 3
    !
    R

D skip_read
    C read
    M 0 '
    E skip_read

    M 0 ' 
    E skip_read

    R

D calc_hex
    = 1 xA
    M 0 'A
    E cond_ret

    = 1 xB
    M 0 'B
    E cond_ret

    = 1 xC
    M 0 'C
    E cond_ret

    = 1 xD
    M 0 'D
    E cond_ret

    = 1 xE
    M 0 'E
    E cond_ret

    = 1 xF
    M 0 'F
    E cond_ret

    - 1 0 '0
    R

D read_hex_ret
    + 0 2 0
    R

D read_hex
    = 2 0
D read_hex_loop
    > 2
    C read
    < 2

    M 0 x0A
    E read_hex_ret
    M 0 x20
    E read_hex_ret
    M 0 0
    E read_hex_ret

    C calc_hex
    l 2 4
    W 2 2 1

    J read_hex_loop

D readint
    C skip_read

    M 0 ''
    E read

    M 0 'x
    E read_hex

    - 0 0 '0
    R

D write8rwint32
    C write8
    C readint
    J write32

D read_label_done
    = 0 0
    S 0 7
    + 7 7 1
    R

D read_label
    > 7
    C skip_read
    < 7

    S 0 7
    + 7 7 1

D .read_label_loop
    > 7
    C read
    < 7

    M 0 x0A
    E read_label_done
    M 0 x20
    E read_label_done

    S 0 7
    + 7 7 1

    J .read_label_loop

D compare_labels_null
    M 2 0
    E cond_ret
    = 0 0
    R

D compare_r7_label_with_buffer
    = 0 1
    A 1 tmp_label_buffer

D compare_labels_loop
    b 2 1
    b 3 7
    + 1 1 1
    + 7 7 1
    M 3 0
    E compare_labels_null
    w 2 3
    M 2 0
    E compare_labels_loop
    = 0 0
    J compare_labels_loop

D read_label_addr
    A 7 tmp_label_buffer
    C read_label

D lookup_label_in_buffer
    A 6 var_addrs
    A 7 var_names

D lookup_loop
    L 5 6
    + 6 6 8
    C compare_r7_label_with_buffer
    M 0 0
    E lookup_loop
    + 0 5 0
    R

D label_rel32
    C read_label_addr
    C curraddr
    + 2 2 4
    w 0 2
    J write32

D op_define
    C curraddr

    A 1 next_var_addr
    L 3 1
    S 2 3
    + 3 3 8
    S 3 1

    A 0 next_var_name
    L 7 0

    > 0
    C read_label
    < 0

    S 7 0

    R

D op_adr_global
    = 0 x48 C write8
    = 0 x8D C write8
    C readint
    l 0 3
    + 0 0 x05
    C write8
    J label_rel32
    
D op_page_buffer
    A 1 bss_size
    L 2 1
    + 2 2 x1000
    S 2 1

    C curraddr
    + 2 2 x1000
    S 2 1

    R

D op_byte
    C readint J write8

D op_quad
    C read_label_addr
    J write64

D op_imm64
    C readint J write64

D op_assign32
    = 0 x48 C write8
    = 0 xC7 C write8

    C readint
    + 0 0 xC0
    J write8rwint32

D op_compare32
    = 0 x48 C write8
    = 0 x81 C write8

    C readint
    + 0 0 xF8
    J write8rwint32

D op_compare_regs
    = 0 x38 C write8
    C readint
    > 0
    C readint
    < 1
    l 0 3
    W 0 0 1
    + 0 0 xC0
    J write8

D op_push
    C readint
    + 0 0 x50
    J write8

D op_pop
    C readint
    + 0 0 x58
    J write8

D op_shl
    = 0 x48 C write8
    = 0 xC1 C write8

    C readint
    + 0 0 xE0
    C write8

    C readint J write8

D op_je
    = 0 x0F C write8
    = 0 x84 C write8

    J label_rel32

D op_jne
    = 0 x0F C write8
    = 0 x85 C write8

    J label_rel32

D op_jmp
    = 0 xE9 C write8

D jmpcall_common

    J label_rel32

D op_call
    = 0 xE8 C write8

    J jmpcall_common

D op_syscall
    = 0 x0F C write8
    = 0 x05 J write8

D op_addregs
    = 0 x48 C write8
    = 0 x8D C write8

    C readint
    l 0 3
    + 0 0 x04
    C write8

    C readint
    > 0
    C readint
    < 1
    l 0 3
    W 0 1 0
    J write8

D op_subregs
    = 0 x48 C write8
    = 0 x29 C write8

    C readint
    > 0
    C readint
    < 1
    l 0 3
    W 0 1 0
    + 0 0 xC0

    J write8

D op_load
    = 0 x48 C write8
    = 0 x8B C write8

    C readint
    > 0
    C readint
    < 1
    l 1 3
    W 0 1 0
    
    J write8

D op_load_byte
    = 0 x48 C write8
    = 0 x0F C write8
    = 0 xB6 C write8

    C readint
    > 0
    C readint
    < 1
    l 1 3
    W 0 1 0
    J write8

D op_store
    = 0 x48 C write8
    = 0 x89 C write8

    C readint
    > 0
    C readint
    < 1
    l 1 3
    W 0 1 0
    
    J write8

D out_of_code
    C seek_to_start

    A 0 bss_size
    L 1 0
    A 0 elf_bss_memsz_68
    S 1 0

    + 1 1 x401000

    A 0 elf_text_vaddr_88
    S 1 0
    + 0 0 8
    S 1 0
    + 0 0 8

    A 2 current_addr
    L 3 2
    w 3 1

    S 3 0
    + 0 0 8
    S 3 0

    = 2 xB0
    A 6 elf_hdr
    = 7 3
    = 0 1
    !

    J clean_exit

D addsub_rsp
    + 0 1 x84 C write8
    = 0 x24   C write8
    J readint

D addsub_common
    = 0 x48 C write8
    = 0 x8D C write8

    C readint
    > 0
    C readint
    < 1
    l 1 3
    M 0 4
    E addsub_rsp
    W 0 1 0
    + 0 0 x80
    C write8
    J readint

D op_ret
    = 0 xC3 J write8

D op_sub
    C addsub_common
    = 1 0
    w 1 0
    + 0 1 0
    J write32

D op_add
    C addsub_common
    J write32

D op_entry
    C curraddr
    A 0 elf_entry_18
    S 2 0
    R

D op
    C skip_read

    M 0 '! E op_syscall
    M 0 '- E op_sub
    M 0 '+ E op_add
    M 0 '> E op_push
    M 0 '= E op_assign32
    M 0 '< E op_pop
    M 0 'A E op_adr_global
    M 0 'B E op_byte
    M 0 'b E op_load_byte
    M 0 'C E op_call
    M 0 'D E op_define
    M 0 'E E op_je
    M 0 'e E op_entry
    M 0 'I E op_imm64
    M 0 'J E op_jmp
    M 0 'L E op_load
    M 0 'l E op_shl
    M 0 'M E op_compare32
    M 0 'm E op_compare_regs
    M 0 'N E op_jne
    M 0 'P E op_page_buffer
    M 0 'Q E op_quad
    M 0 'R E op_ret
    M 0 'S E op_store
    M 0 'W E op_addregs
    M 0 'w E op_subregs
    M 0 0  E out_of_code

    C writeerr8
    = 0 'o C writeerr8
    = 0 'p C writeerr8

    J exit

D filename
B 'b
B 'u
B 'i
B 'l
B 'd
B '/
B 'o
B 'u
B 't
B 0

e
    = 0 2
    A 7 filename
    = 6 x141
    = 2 x1FF
    !
    M 0 3
    N exit

    = 6 x1000
    C seek
D op_loop
    C op
    J op_loop
